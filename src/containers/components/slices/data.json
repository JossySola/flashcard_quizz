{
    "topics": [
        {"id": "001", "name": "React", "author": "Jossy Solá"},
        {"id": "002", "name": "Redux", "author": "Jossy Solá"},
        {"id": "003", "name": "React-Redux", "author": "Jossy Solá"}
    ],
    "quizzes": [
        {"id": "010", "topicId": "001", "name": "Function Components", "author": "Jossy Solá"},
        {"id": "020", "topicId": "002", "name": "Data Flow", "author": "Jossy Solá"},
        {"id": "030", "topicId": "003", "name": "Hooks", "author": "Jossy Solá"},
        {"id": "040", "topicId": "002", "name": "Toolkit (RTK)", "author": "Jossy Solá"}
    ],
    "cards": [
        {
            "quizzId": "010",
            "id": "100",
            "front": ["Hook for creating States", "To render, you just need to use: return ()", "Hook for creating side effects", "Props are accessed by setting props as the argument"],
            "back": ["useState()", "True", "useEffect()", "True"]
        },
        {
            "quizzId": "020",
            "id": "200",
            "front": ["They are 3 functions provided by Store", "______ modify the State", "_____ provide the state of the app/component", "The _____ triggers Actions and gets updated by changes in the State", "The _____ works with the Action received and the Reducer stored, to update the State"],
            "back": ["getState(), dispatch(), subscribe()", "Actions", "State", "View", "Store"]
        },
        {
            "quizzId": "030",
            "id": "300",
            "front": ["Gives Store access to all React components", "_____ are pure functions that return states and/or specific parts of them", "useSelector() subscribes the React component to the data retrieved", "This hook makes reference to store.dispatch()"],
            "back": ["<Provider>", "Selectors", "True", "useDispatch()"]
        },
        {
            "quizzId": "040",
            "id": "400",
            "front": ["Immutable Reducers are a must when using createSlice()", "The _____ hook helps creating Async Middleware", "The _____ Hook works automatically with combineReducers() when setting up the Store", "Object destructuring is used when exporting Action Creators", "You export as default this part of the Slice: sliceName._____"],
            "back": ["False", "createAsyncThunk()", "configureStore()", "True", "The Reducer"]
        }
    ]
}